// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PullRequest {
  id        String   @id @default(uuid())
  name      String
  status    String
  url       String   @unique
  repo      String
  repo_url  String
  author    String
  authorId  Int
  teamId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   SlackUser? @relation(fields: [authorId, teamId], references: [authorId, teamId])
  review Review[]

  @@index([repo_url, status, authorId])
}

model Review {
  id             String   @id @default(uuid())
  author         String
  authorId       Int
  status         Status
  pull_requestId String
  teamId         String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user         SlackUser?  @relation(fields: [authorId, teamId], references: [authorId, teamId])
  pull_request PullRequest @relation(fields: [pull_requestId], references: [id])

  @@unique([authorId, pull_requestId])
  @@index([pull_requestId, status, authorId])
}

enum Status {
  approved
  changes_requested
  commented
  review_requested
}

model BlacklistedAuthor {
  id        String   @id @default(uuid())
  author    String
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([authorId])
}

model SlackUser {
  slackId   String   @unique
  nickname  String
  authorId  Int
  teamId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  slackTeam    SlackTeam     @relation(fields: [teamId], references: [teamId])
  pullRequests PullRequest[]
  reviews      Review[]

  @@unique([teamId, authorId])
  @@index([authorId])
}

model SlackTeam {
  secret    String   @unique @default(uuid())
  teamId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  slackUsers SlackUser[]
}
